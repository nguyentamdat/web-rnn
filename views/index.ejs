<!DOCTYPE html>
<html>
  <head>
    <title>Bao Khoa</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel='stylesheet' href='./stylesheets/style.css'/>
  </head>
  <body class="h-auto">
    <script type="text/javascript">
      $.get("http://baokhoa.tk/api/getAllStatus", (data, status) => {
        data.forEach(x => {
          let id = "#" + x.id;
          if (x.status == 1) $(id+".toggle").prop("checked", true);
          else $(id+".toggle").prop("checked", false);
          $("div"+id+".spinner-grow").hide();
        });
      })
      function onConnect() {
        console.log("On Connect")
        client.subscribe("slaves/status")
      }
      function onConnectLost() {
        if (responseObject.errorCode !== 0) {
          console.log("onConnectionLost:"+responseObject.errorMessage);
        }
      }
      function onMessageArrived(message) {
        console.log("onMessageArrived:"+message.payloadString);
        const id = "#" + message.payloadString[0];
        if (message.payloadString[1] == 1) $(id+".toggle").prop("checked", true);
        else $(id+".toggle").prop("checked", false);
        $("div"+id+".spinner-grow").hide();
      }
      const client = new Paho.MQTT.Client("baokhoa.tk", 8080, "/", "WebApp");
      client.onConnectLost = onConnectLost;
      client.onMessageArrived = onMessageArrived;
      client.connect({onSuccess: onConnect});
      client.reconnect = true;
    </script>
    
    <form method="POST" action="/">
      <div class="w-50 d-flex flex-row justify-content-between align-item-center">
        <div class="column">
          <h2>Bathrooom</h2>
          <div class="row">
            <label class="switch" id="1">
              <input class="toggle" id="1" type="checkbox"/>
              <span class="slider round"></span>
            </label>
            <div class="m-2">Lamp</div>
            <div class="spinner-grow" id="1" role="status">
              <span class="sr-only"></span>
            </div>
          </div>
          <div class="row">
            <label class="switch" id="2">
              <input class="toggle" id="2" type="checkbox"/>
              <span class="slider round"></span>
            </label>
            <div class="m-2">Water heater</div>
            <div class="spinner-grow" id="2" role="status">
              <span class="sr-only"></span>
            </div>
          </div>
        </div>
        <div class="column">
          <h2>Living room</h2>
          <div class="row">
            <label class="switch" id="3">
              <input class="toggle" id="3" type="checkbox"/>
              <span class="slider round"></span>
            </label>
            <div class="m-2">Televison</div>
            <div class="spinner-grow" id="3" role="status">
              <span class="sr-only"></span>
            </div>
          </div>
        </div>
        <div class="column">
          <h2>Bedroom</h2>
          <div class="row">
            <label class="switch" id="4">
              <input class="toggle" id="4" type="checkbox"/>
              <span class="slider round"></span>
            </label>
            <div class="m-2">Air Condition</div>
            <div class="spinner-grow" id="4" role="status">
              <span class="sr-only"></span>
            </div>
          </div>
        </div>
        <div class="column">
          <h2>Work room</h2>
          <div class="row">
            <label class="switch" id="5">
              <input class="toggle" id="5" type="checkbox"/>
              <span class="slider round"></span>
            </label>
            <div class="m-2">Fan</div>
            <div class="spinner-grow" id="5" role="status">
              <span class="sr-only"></span>
            </div>
          </div>
        </div>
      </div>
    </form>
    <canvas id="canvas" width="1280" height="400"></canvas>
    <script>
      $("input").click((event) => {
        event.preventDefault();
        let id = event.target.id + (!event.target.checked ? "0" : "1");
        console.log(id);
        client.send("slaves/control", id, 1, true);
        $("div#"+event.target.id+".spinner-grow").show();
      })
    </script>
    <script type="text/javascript">
      var canvas ;
      var context ;
      var Val_max;
      var Val_min;
      var sections;
      var xScale;
      var yScale;
      var Apple =  [100, 102, 87, , 100, 123, 100, 90, 87, 91, 93, 88];
      var Samsung = [30, 50, 70, 80, 90, 100, 95, 91, 85, 92, 99, 130];
      var Nokia =   [20, -10, -20, -25, -40, 5, 10, 28, 30, 43, 65, 80];
      function init() {
        sections = 12;
        Val_max = 130;
        Val_min = -40;
        var stepSize = 10;
        var columnSize = 50;
        var rowSize = 50;
        var margin = 10;
        var xAxis = [" ", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] 
        canvas = document.getElementById("canvas");
        context = canvas.getContext("2d");
        context.fillStyle = "#0099ff"
        context.font = "20 pt Verdana"
        yScale = (canvas.height - columnSize - margin) / (Val_max - Val_min);
        xScale = (canvas.width - rowSize) / sections;
        context.strokeStyle="#009933"; // color of grid lines
        context.beginPath();
        for (i=1;i<=sections;i++) {
          var x = i * xScale;
          context.fillText(xAxis[i], x,columnSize - margin);
          context.moveTo(x, columnSize);
          context.lineTo(x, canvas.height - margin);
        }
        var count =  0;
        for (scale=Val_max;scale>=Val_min;scale = scale - stepSize) {
          var y = columnSize + (yScale * count * stepSize); 
          context.fillText(scale, margin,y + margin);
          context.moveTo(rowSize,y)
          context.lineTo(canvas.width,y)
          count++;
        }
        context.stroke();
        context.translate(rowSize,canvas.height + Val_min * yScale);
        context.scale(1,-1 * yScale);          
        context.strokeStyle="#FF0066";
        plotData(Apple);
        context.strokeStyle="#9933FF";
        plotData(Samsung);
        context.strokeStyle="#000";
        plotData(Nokia);
      }
      function plotData(dataSet) {
        context.beginPath();
        context.moveTo(0, dataSet[0]);
        for (i=1;i<sections;i++) {
          context.lineTo(i * xScale, dataSet[i]);
        }
        context.stroke();
      }
      init();
    </script>
  </body>
</html>
